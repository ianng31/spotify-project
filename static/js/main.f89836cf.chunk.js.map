{"version":3,"sources":["Components/GiantSwitch/index.js","App.js","reportWebVitals.js","index.js"],"names":["IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","GiantSwitch","state","handleChange","setState","FormControlLabel","control","checkedA","onChange","name","useStyles","makeStyles","box","display","flexDirection","justifyContent","alignItems","alignContent","textAlign","app","text","marginBottom","whiteText","marginBototm","textTitle","App","token","Cookies","get","React","useState","checkedB","document","body","style","console","log","className","Provider","value","Box","Typography","variant","event","target","redirectUri","clientID","scopes","Scopes","playlistReadPrivate","playlistModifyPublic","playlistReadCollaborative","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f89836cf.chunk.js","sourcesContent":["import React from 'react' \nimport {  FormControlLabel, Switch } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 200,\n    height: 100,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(100px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 98,\n    height: 98,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n \nconst GiantSwitch = ({state, setState, handleChange}) => {\n  return (\n      <div>\n        <FormControlLabel\n            control={<IOSSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedB\" />}\n        />\n      </div>\n  )\n}\nexport default GiantSwitch","import React from 'react'\nimport { SpotifyApiContext } from 'react-spotify-api'\nimport Cookies from 'js-cookie'\n \nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\nimport { Box, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GiantSwitch  from './Components/GiantSwitch'\n\nconst useStyles = makeStyles(() => ({\n  box: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      textAlign: 'center'\n    },\n    app: {\n      width: '100%',\n      height: '100%',\n    },\n    text: {\n      marginBottom: '2%',\n    },\n    whiteText: {\n      color: 'white',\n      marginBototm: '2%'\n    },\n    textTitle: {\n      color: '#1db954',\n      marginBottom: '2%',\n    }\n}));\n \nconst App = () => {\n  const token = Cookies.get('spotifyAuthToken')\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedB: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    if (event.target.checked) {\n      console.log('yes yes')\n    }\n  };\n\n  document.body.style.backgroundColor = state.checkedB ? '#1d1e1f' : 'white';\n\n  token && console.log(`You are authorized with token: ${token}`)\n\n  return (\n    <div className={classes.app}>\n      {token ? (\n        <SpotifyApiContext.Provider value={token}>\n          {/* Your Spotify Code here */}\n          <Box className={classes.box}>\n            <Typography className={classes.textTitle} variant='h1'>{state.checkedB ? \"Discover Daily Enabled\" : \"Enable Discover Daily\"}</Typography>\n            <Typography className={state.checkedB ? classes.whiteText : classes.text}>Disclaimer: At the moment Spotify has not made an API for the daily mix playlists. \n            For this feature to work please add all of your daily mix playlists to your library.\n            </Typography>\n\n            <GiantSwitch state={state} setState={setState} handleChange={handleChange}/>\n          </Box>\n        </SpotifyApiContext.Provider>\n      ) : (\n        // Display the login page\n        <Box className={classes.box}>\n          <Typography className={classes.textTitle} variant='h1'>Discover Daily</Typography>\n          <Typography className={classes.text} >\n            Extract the songs you haven't heard of from the daily mix playlists every day\n            for a complete playlist of just new songs.\n          </Typography>\n\n          <SpotifyAuth\n            redirectUri='http://localhost:3000/callback'\n            clientID='53dd95d5f7374e28a839828753099534'\n            scopes={\n              [\n                Scopes.playlistReadPrivate, \n                Scopes.playlistModifyPublic, \n                Scopes.playlistReadCollaborative\n              ]\n            } // either style will work\n          />\n        </Box>\n      )}\n    </div>\n  )\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}