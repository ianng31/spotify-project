[{"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/index.js":"1","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/App.js":"2","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/reportWebVitals.js":"3","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Components/GiantSwitch/index.js":"4","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Utils/index.js":"5","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Utils/constants.js":"6"},{"size":500,"mtime":1608337934472,"results":"7","hashOfConfig":"8"},{"size":3158,"mtime":1608382499126,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608337934501,"results":"10","hashOfConfig":"8"},{"size":1555,"mtime":1608344010616,"results":"11","hashOfConfig":"8"},{"size":7092,"mtime":1608386581222,"results":"12","hashOfConfig":"8"},{"size":185,"mtime":1608386433721,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10coxio",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/index.js",[],["28","29"],"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/App.js",["30","31"],"import React from 'react'\nimport { SpotifyApiContext } from 'react-spotify-api'\nimport Cookies from 'js-cookie'\n \nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\nimport { Box, Typography, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GiantSwitch  from './Components/GiantSwitch'\nimport { createDiscoverDaily } from './Utils/index'\nimport {CLIENT_ID, REDIRECT_URI} from './Utils/constants'\n\nconst useStyles = makeStyles(() => ({\n  box: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      textAlign: 'center'\n    },\n    app: {\n      width: '100%',\n      height: '100%',\n    },\n    text: {\n      marginBottom: '2%',\n    },\n    whiteText: {\n      color: 'white',\n      marginBototm: '2%'\n    },\n    textTitle: {\n      color: '#1db954',\n      marginBottom: '2%',\n    },\n    button: {\n      backgroundColor: '#1db954',\n      color: 'white',\n      width: '70vw',\n      Height: '50vh',\n      fontSize: '4vw',\n      borderRadius: '80px'\n    }\n}));\n \nconst App = () => {\n  const token = Cookies.get('spotifyAuthToken')\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedB: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    if (event.target.checked) {\n      console.log('yes yes')\n    }\n  };\n\n  document.body.style.backgroundColor = 'white';\n\n  token && console.log(`You are authorized with token: ${token}`)\n\n  return (\n    <div className={classes.app}>\n      {token ? (\n        <SpotifyApiContext.Provider value={token}>\n          {/* Your Spotify Code here */}\n          <Box className={classes.box}>\n            <Typography className={state.checkedB ? classes.whiteText : classes.text}>Disclaimer: At the moment Spotify has not made an API for the daily mix playlists. \n            For this feature to work please add all of your daily mix playlists to your library.\n            </Typography>\n            <Button \n            onClick={() => createDiscoverDaily(token)}\n            className={classes.button}\n            >\n              Generate Discover Daily\n            </Button>\n          </Box>\n        </SpotifyApiContext.Provider>\n      ) : (\n        // Display the login page\n        <Box className={classes.box}>\n          <Typography className={classes.textTitle} variant='h1'>Discover Daily</Typography>\n          <Typography className={classes.text} >\n            Extract the songs you haven't heard of from the daily mix playlists every day\n            for a complete playlist of just new songs.\n          </Typography>\n\n          <SpotifyAuth\n            redirectUri={REDIRECT_URI}\n            clientID={CLIENT_ID}\n            scopes={\n              [\n                Scopes.playlistReadPrivate, \n                Scopes.playlistModifyPublic, \n                Scopes.playlistReadCollaborative\n              ]\n            }\n          />\n        </Box>\n      )}\n    </div>\n  )\n}\nexport default App","/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/reportWebVitals.js",[],"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Components/GiantSwitch/index.js",[],"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Utils/index.js",["32"],"/mnt/c/Users/ianng/Desktop/CODE/spotify-project/src/Utils/constants.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":9,"column":8,"nodeType":"39","messageId":"40","endLine":9,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":56,"column":9,"nodeType":"39","messageId":"40","endLine":56,"endColumn":21},{"ruleId":"37","severity":1,"message":"42","line":84,"column":23,"nodeType":"39","messageId":"40","endLine":84,"endColumn":27},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'GiantSwitch' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]